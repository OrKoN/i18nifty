{"version":3,"sources":["ui/router.ts","ui/i18n.tsx","ui/theme.ts","ui/pages/FourOhFour.tsx","ui/assets/demo_1.mp4","ui/assets/demo_1.webm","ui/pages/Home.tsx","ui/assets/banner_dark.png","ui/assets/banner_light.png","ui/App.tsx","ui/index.tsx"],"names":["routeDefs","defineRoute","makeThisModuleAnExecutableRouteLister","createRouter","RouteProvider","useRoute","routes","createI18nApi","languages","fallbackLanguage","undefined","useTranslation","useLang","resolveLocalizedString","useResolveLocalizedString","createThemeProvider","params","defaultGetTypographyDesc","ThemeProvider","useTheme","createMakeStyles","makeStyles","Icon","useStyles","createIcon","AccessTimeIcon","SentimentSatisfiedIcon","Text","createIconButton","IconButton","createButton","Button","createText","splashScreen","createOnyxiaSplashScreenLogo","OnyxiaSplashScreenLogo","LanguageSelect","createPageHeader","PageHeader","createButtonBarButton","ButtonBarButton","createLanguageSelect","FourOhFour","memo","t","classes","className","root","typo","theme","colors","useCases","surfaces","background","declareComponentKeys","i18n","Home","GlHero","title","GlHeroText","title2","subTitle","illustration","demoMp4Url","demoWebmUrl","hasLinkToSectionBellow","hasIllustrationShadow","subtitle","imageWrapper","textWrapper","routeGroup","createGroup","home","typography","textFocus","textPrimary","windowInnerWidth","breakpointsValues","lg","githubRepoUrl","App","route","lang","setLang","hideRootSplashScreen","useSplashScreen","useEffect","pageNode","useMemo","Page","has","GlTemplate","header","GlHeader","GlLogo","logoUrl","isDarkModeEnabled","bannerDarkUrl","bannerLightUrl","width","links","enableDarkModeSwitch","githubButtonSize","showGithubStarCount","customItemEnd","languageSelect","language","onLanguageChange","variant","headerOptions","spacing","render","document","getElementById"],"mappings":"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","file":"static/js/main.90df4d16.chunk.js","sourcesContent":["import { createRouter, defineRoute } from \"type-route\";\nimport { makeThisModuleAnExecutableRouteLister } from \"github-pages-plugin-for-type-route\";\n\nexport const routeDefs = {\n    \"home\": defineRoute(\"/\"),\n};\n\nmakeThisModuleAnExecutableRouteLister(routeDefs);\n\nexport const { RouteProvider, useRoute, routes } = createRouter(\n    { \"scrollToTop\": false },\n    routeDefs,\n);\n","import { createI18nApi } from \"i18nifty\";\n\nexport const languages = [\"en\", \"fr\"] as const;\n\nexport const fallbackLanguage = \"en\";\n\nexport type Language = typeof languages[number];\n\nexport type LocalizedString = Parameters<typeof resolveLocalizedString>[0];\n\nexport const { useTranslation, resolveLocalizedString, useLang, useResolveLocalizedString } = createI18nApi<\n\t| typeof import(\"./App\").i18n\n\t| typeof import(\"./pages/Home\").i18n\n\t| typeof import(\"./pages/FourOhFour\").i18n\n>()(\n\t{\n\t\tlanguages,\n\t\tfallbackLanguage,\n\t\t\"doPersistLanguageInLocalStorage\": true\n\t},\n\t{\n\t\t\"en\": {\n\t\t\t\"App\": {\n\t\t\t\t\"documentation\": \"Documentation\",\n\t\t\t\t\"try it\": \"Try it\",\n\t\t\t},\n\t\t\t\"Home\": {\n\t\t\t\t\"hero text\": <>i18<g>nifty</g></>,\n\t\t\t\t\"hero text subtext\": \"Type safe internationalization and translation in React\",\n\t\t\t\t\"subTitle\": \"Pool computing resources and provide a state of the art work environnement to your data scientists without relying on big tech closed-source software.\",\n\t\t\t\t\"what is onyxia title\": \"What's Onyxia?\",\n\t\t\t\t\"what is onyxia body\":\n\t\t\t\t\t`Onyxia is a web app that installs on [Kubernetes](https://hubernetes.io) cluster.  \n                It provides to your data scientist a nice and intuitive interface to launch on demand [containers](https://wwww.docker.com/) like [Spark, RStudio or Jupyter](https://datalab/sppcloud.fr/catalog) on demand.  \n                On top of that Onyxia features a tight S3 integration via [MINIO](https://min.io/) or [AWS](https://aws.amazon.com/s3/) and [Vault](https://www.vaultproject.io) for managing sensitive information.`,\n\t\t\t\t\"install now\": \"Install now\",\n\t\t\t},\n\t\t\t\"FourOhFour\": {\n\t\t\t\t\"not found\": \"Page not found\"\n\t\t\t}\n\t\t},\n\t\t/* spell-checker: disable */\n\t\t\"fr\": {\n\t\t\t\"App\": {\n\t\t\t\t\"documentation\": \"Documentation\",\n\t\t\t\t\"try it\": \"Essayez\",\n\t\t\t},\n\t\t\t\"Home\": {\n\t\t\t\t\"hero text\": undefined,\n\t\t\t\t\"hero text subtext\": undefined,\n\t\t\t\t\"subTitle\": \"Mettez en commun votre puissance de calcul et fournissez un environnement de travail a l'état de l'art à vos datascientits sans dépendre de logiciels propiétaires des GAFAM.\",\n\t\t\t\t\"what is onyxia title\": \"Qu'est-ce qu'Onyxia?\",\n\t\t\t\t\"what is onyxia body\":\n\t\t\t\t\t`Onyxia est une application web qui s'installe sur un cluster [Kubernetes](https://kubernetes.io/).  \n            Elle fournit à vos data scientistes une interface intuitive et agréable pour lancer des [containers](https://www.docker.com/) comme [Spark, RStudio ou Jupyter](https://datalab.sspcloud.fr/catalog/) à la demande\n            et propose une intégration S3 ([MINIO](https://min.io/) ou [AWS](https://aws.amazon.com/s3/)) pour travailler avec la donnée et [Vault](https://www.vaultproject.io/) pour la géstion sécuisé des information sensibles.\n            `,\n\t\t\t\t\"install now\": \"Installer maintenant\",\n\t\t\t},\n\t\t\t\"FourOhFour\": {\n\t\t\t\t\"not found\": \"Page non trouvée\",\n\t\t\t},\n\t\t},\n\t}\n\t/* spell-checker: enable */\n);\n\n\n\n\n\n","import {\n    createThemeProvider,\n    defaultGetTypographyDesc\n} from \"onyxia-ui\";\nimport { createIcon } from \"onyxia-ui/Icon\";\nimport { createIconButton } from \"onyxia-ui/IconButton\";\nimport { createButton } from \"onyxia-ui/Button\";\nimport { createText } from \"onyxia-ui/Text\";\nimport { createMakeStyles } from \"tss-react/compat\";\nimport type { ThemeProviderProps } from \"onyxia-ui\";\nimport { createPageHeader } from \"onyxia-ui/PageHeader\";\nimport type { Param0 } from \"tsafe/Param0\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\nimport SentimentSatisfiedIcon from \"@mui/icons-material/SentimentSatisfied\";\nimport { createButtonBarButton } from \"onyxia-ui/ButtonBarButton\";\nimport { createLanguageSelect } from \"onyxia-ui/LanguageSelect\";\nimport type { Language } from \"ui/i18n\";\nimport { createOnyxiaSplashScreenLogo } from \"onyxia-ui/lib/SplashScreen\";\n\nexport const { ThemeProvider, useTheme } = createThemeProvider({\n    \"getTypographyDesc\": params => ({\n        ...defaultGetTypographyDesc(params),\n        \"fontFamily\": '\"Work Sans\", sans-serif',\n        //\"fontFamily\": 'Marianne, sans-serif',\n    })\n});\n\nexport const { makeStyles, useStyles } = createMakeStyles({ useTheme });\n\n/** @see: <https://material-ui.com/components/material-icons/> */\nexport const { Icon } = createIcon({\n    \"accessTime\": AccessTimeIcon,\n    \"sentimentSatisfied\": SentimentSatisfiedIcon,\n});\n\nexport type IconId = Param0<typeof Icon>[\"iconId\"];\n\nexport const { IconButton } = createIconButton({ Icon });\nexport const { Button } = createButton({ Icon });\nexport const { Text } = createText({ useTheme });\n\nconst { OnyxiaSplashScreenLogo } = createOnyxiaSplashScreenLogo({ useTheme });\n\nexport const splashScreen: ThemeProviderProps[\"splashScreen\"] = {\n    \"Logo\": OnyxiaSplashScreenLogo,\n    \"minimumDisplayDuration\": 0,\n};\n\nexport const { PageHeader } = createPageHeader({ Icon });\n\nexport const { ButtonBarButton } = createButtonBarButton({ Icon });\n\nexport const { LanguageSelect } = createLanguageSelect<Language>({\n    \"languagesPrettyPrint\": {\n        \"en\": \"English\",\n        \"fr\": \"Français\"\n    }\n});\n","import { memo } from \"react\";\nimport { useTranslation } from \"ui/i18n\";\nimport { makeStyles, Text } from \"../theme\";\nimport { declareComponentKeys } from \"i18nifty\";\n\nexport const FourOhFour = memo(() => {\n    const { t } = useTranslation({ FourOhFour });\n\n    const { classes } = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Text typo=\"page heading\">{t(\"not found\")} 😥</Text>\n        </div>\n    );\n});\n\nconst useStyles = makeStyles({ \"name\": { FourOhFour } })(theme => ({\n    \"root\": {\n        \"height\": \"100%\",\n        \"display\": \"flex\",\n        \"alignItems\": \"center\",\n        \"justifyContent\": \"center\",\n        \"backgroundColor\": theme.colors.useCases.surfaces.background,\n    },\n}));\n\nexport const { i18n } = declareComponentKeys<\n    \"not found\"\n>()({ FourOhFour });\n","export default __webpack_public_path__ + \"static/media/demo_1.89b97334.mp4\";","export default __webpack_public_path__ + \"static/media/demo_1.586c1ecf.webm\";","import { createGroup } from \"type-route\";\nimport { routes } from \"../router\";\nimport { GlHero } from \"gitlanding/GlHero\";\nimport { GlHeroText } from \"gitlanding/GlHero/GlHeroText\";\nimport { Text } from \"ui/theme\";\nimport { useTranslation } from \"ui/i18n\";\nimport { makeStyles } from \"../theme\";\nimport { breakpointsValues } from \"onyxia-ui\";\nimport { declareComponentKeys } from \"i18nifty\";\nimport demoMp4Url from \"ui/assets/demo_1.mp4\";\nimport demoWebmUrl from \"ui/assets/demo_1.webm\";\n\nHome.routeGroup = createGroup([routes.home]);\n\nexport function Home() {\n    const { t } = useTranslation({ Home });\n    const { classes } = useStyles();\n\n    /*\n    <GlIllustration\n    hasShadow={false}\n    type=\"video\"\n    height={400}\n    sources={[\n      {\n        \"src\": nestedSelectorsMp4Url,\n        \"type\": 'video/mp4; codecs=\"hvc1\"',\n      },\n      {\n        \"src\": nestedSelectorsWebmUrl,\n        \"type\": \"video/webm\",\n      },\n    ]}\n  />\n  */\n\n    return (\n        <>\n            <GlHero\n                title={\n                    <>\n                        <GlHeroText>{t(\"hero text\")}</GlHeroText>\n                        <Text typo=\"display heading\" className={classes.title2}>{t(\"hero text subtext\")}</Text>\n                    </>\n                }\n                subTitle={t(\"subTitle\")}\n                illustration={{\n                    \"type\": \"video\",\n                    \"sources\": [\n                        {\n                            \"src\": demoMp4Url,\n                            \"type\": 'video/mp4; codecs=\"hvc1\"',\n                        },\n                        {\n                            \"src\": demoWebmUrl,\n                            \"type\": \"video/webm\",\n                        }\n                    ]\n                }}\n                hasLinkToSectionBellow={true}\n                hasIllustrationShadow={false}\n                classes={{\n                    \"subtitle\": classes.subtitle,\n                    \"imageWrapper\": classes.imageWrapper,\n                    \"textWrapper\": classes.textWrapper,\n                }}\n            />\n            {/*\n            <GlArticle\n                id=\"firstSection\"\n                title={t(\"what is onyxia title\")}\n                body={t(\"what is onyxia body\")}\n                buttonLabel={t(\"install now\")}\n                buttonLink={{ \"href\": \"https://install.onyxia.sh\" }}\n                illustration={\n                    <GlIllustration\n                        hasShadow={false}\n                        type=\"image\"\n                        url={theme.isDarkModeEnabled ? toilLightPngUrl : toilLightPngUrl}\n                    />\n                }\n                hasAnimation={true}\n                illustrationPosition=\"right\"\n            />\n            */}\n        </>\n\n    );\n}\n\n\n\nconst useStyles = makeStyles({ \"name\": { Home } })(theme => ({\n    \"title2\": {\n        \"color\": theme.colors.useCases.typography.textFocus,\n        \"fontStyle\": \"italic\"\n    },\n    \"subtitle\": {\n        \"color\": theme.colors.useCases.typography.textPrimary\n    },\n    \"imageWrapper\": {\n        ...(() => {\n\n            if (theme.windowInnerWidth >= breakpointsValues.lg) {\n                return {\n                    \"paddingRight\": 30,\n                    \"paddingLeft\": 30\n                };\n\n            }\n\n            return {};\n\n        })()\n    },\n    \"textWrapper\": {\n        ...(() => {\n\n            if (theme.windowInnerWidth >= breakpointsValues.lg) {\n                return {\n                    \"marginLeft\": 70\n                };\n\n            }\n\n            return {};\n\n        })()\n    }\n}));\n\nexport const { i18n } = declareComponentKeys<\n    \"hero text\" |\n    \"hero text subtext\" |\n    \"subTitle\" |\n    \"what is onyxia title\" |\n    \"what is onyxia body\" |\n    \"install now\"\n>()({ Home });\n","export default __webpack_public_path__ + \"static/media/banner_dark.44004ac2.png\";","export default __webpack_public_path__ + \"static/media/banner_light.964793f8.png\";","import { useEffect, useMemo, memo } from \"react\";\nimport { useRoute } from \"./router\";\nimport { FourOhFour } from \"./pages/FourOhFour\";\nimport { GlTemplate } from \"gitlanding/GlTemplate\";\nimport { useSplashScreen } from \"onyxia-ui\";\nimport { Home } from \"./pages/Home\";\nimport { GlHeader } from \"gitlanding/GlHeader\";\nimport { useTranslation } from \"ui/i18n\";\nimport { makeStyles } from \"ui/theme\";\nimport { LanguageSelect } from \"ui/theme\";\nimport { useLang } from \"ui/i18n\";\nimport { breakpointsValues } from \"onyxia-ui\";\nimport { declareComponentKeys } from \"i18nifty\";\nimport { GlLogo } from \"gitlanding/utils/GlLogo\";\nimport bannerDarkUrl from \"ui/assets/banner_dark.png\";\nimport bannerLightUrl from \"ui/assets/banner_light.png\";\n\n\nconst githubRepoUrl = \"https://github.com/garronej/i18nifty\";\n\n/* spell-checker: disable */\nexport const App = memo(() => {\n    const route = useRoute();\n\n    const { lang, setLang } = useLang();\n\n    {\n        const { hideRootSplashScreen } = useSplashScreen();\n\n        useEffect(() => {\n            hideRootSplashScreen();\n        }, []);\n    }\n\n    const { t } = useTranslation({ App });\n\n    const pageNode = useMemo(() => {\n        {\n            const Page = Home;\n\n            if (Page.routeGroup.has(route)) {\n                return <Page />;\n            }\n        }\n\n        return <FourOhFour />;\n    }, [route]);\n\n    const { classes, theme } = useStyles();\n\n    return (\n        <GlTemplate\n            header={\n                <GlHeader\n                    title={<GlLogo logoUrl={theme.isDarkModeEnabled ? bannerDarkUrl : bannerLightUrl} width={100} />}\n                    links={[\n                        {\n                            \"label\": \"GitHub\",\n                            \"href\": githubRepoUrl\n                        },\n                        {\n                            \"label\": t(\"documentation\"),\n                            \"href\": \"https://docs.i18nifty.dev\",\n                        },\n                        {\n                            \"label\": t(\"try it\"),\n                            \"href\": \"https://stackblitz.com/edit/react-ts-m4d8w7?file=components/LanguageSwitch.tsx\",\n                        },\n                    ]}\n                    enableDarkModeSwitch={true}\n                    githubRepoUrl={githubRepoUrl}\n                    githubButtonSize=\"large\"\n                    showGithubStarCount={true}\n                    customItemEnd={\n                        <LanguageSelect\n                            className={classes.languageSelect}\n                            language={lang}\n                            onLanguageChange={setLang}\n                            variant=\"big\"\n                        />\n                    }\n                />\n            }\n            headerOptions={{\n                \"position\": \"sticky\",\n                \"isRetracted\": \"smart\",\n            }}\n        >\n            {pageNode}\n        </GlTemplate>\n    );\n});\n\nexport const { i18n } = declareComponentKeys<\n    | \"documentation\" \n    | \"try it\" \n>()({ App });\n\nconst useStyles = makeStyles({ \"name\": { App } })(theme => ({\n    \"languageSelect\": {\n        \"marginLeft\": theme.spacing(3),\n        \"display\": (() => {\n\n            if (theme.windowInnerWidth >= breakpointsValues.lg) {\n                return undefined;\n            }\n\n            return \"none\";\n\n        })()\n    }\n}));\n","import { render } from \"react-dom\";\nimport { App } from \"./App\";\nimport { RouteProvider } from \"./router\";\nimport { ThemeProvider, splashScreen } from \"./theme\";\n\nrender(\n    <RouteProvider>\n            <ThemeProvider splashScreen={splashScreen}>\n                <App />\n            </ThemeProvider>\n    </RouteProvider>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}